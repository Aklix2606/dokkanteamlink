openapi: 3.0.0
info:
  title: Dokkan Team Link API
  description: API for managing user authentication, characters, and teams.
  version: 1.0.0

servers:
  - url: http://localhost:3000/api
    description: Local server

paths:
  /login:
    post:
      summary: Authenticates a user and returns a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
        '401':
          description: Unauthorized

  /register:
    post:
      summary: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Bad request

  /users/me:
    get:
      summary: Retrieves details of the currently authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User details retrieved
        '401':
          description: Unauthorized

  /users/{userId}/teams:
    put:
      summary: Updates teams for a specific user.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                teamId:
                  type: string
                name:
                  type: string
                members:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Teams updated successfully
        '404':
          description: User not found

  /characters:
    get:
      summary: Fetches all characters.
      responses:
        '200':
          description: List of characters

  /characters/{characterId}:
    get:
      summary: Fetches a single character by ID.
      parameters:
        - in: path
          name: characterId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Character details
        '404':
          description: Character not found

  /teams/{teamId}:
    delete:
      summary: Deletes a specific team.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: teamId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team deleted successfully
        '404':
          description: Team not found or unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
